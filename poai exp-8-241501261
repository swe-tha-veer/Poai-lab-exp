# Initial facts
facts = {'a': True, 'b': True, 'c': False}

# Rules in the form: (conclusion, [conditions])
rules = [('d', ['a', 'b']), ('e', ['b', 'c']), ('f', ['x', 'e'])]

def forward_chaining(facts, rules, goal):
    inferred = set(fact for fact, val in facts.items() if val)
    new_inferred = inferred.copy()

    while new_inferred:
        current_inferred = set()

        for head, body in rules:
            if head not in inferred and all(fact in inferred for fact in body):
                current_inferred.add(head)

        if not current_inferred:
            break

        inferred.update(current_inferred)
        new_inferred = current_inferred

    return goal in inferred

# Check multiple goals
for goal in ['f', 'e', 'd']:
    print(f"\nExpected Output for the Goal '{goal}' :")
    if forward_chaining(facts, rules, goal):
        print(f"The goal '{goal}' can be achieved.")
    else:
        print(f"The goal '{goal}' cannot be achieved.")
